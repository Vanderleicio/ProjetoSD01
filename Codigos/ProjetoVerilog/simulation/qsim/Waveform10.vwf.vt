// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/20/2023 23:43:06"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          testaTudo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module testaTudo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg TdhtTrabalhando;
reg TerroDHT;
reg [39:0] TsaidaDHT;
reg Tterminou;
reg ch1;
reg ch2;
reg ch3;
reg clk;
reg treg_pino_inout;
reg rx;
// wires                                               
wire [26:0] Tcontador;
wire TenableDHT;
wire TresetDHT;
wire colum;
wire debug;
wire [15:0] debugData;
wire [2:0] estadoAtual;
wire [7:0] linhas;
wire pino_inout;
wire teste;
wire teste1;
wire tx;

// assign statements (if any)                          
assign pino_inout = treg_pino_inout;
testaTudo i1 (
// port map - connection between master ports and signals/registers   
	.Tcontador(Tcontador),
	.TdhtTrabalhando(TdhtTrabalhando),
	.TenableDHT(TenableDHT),
	.TerroDHT(TerroDHT),
	.TresetDHT(TresetDHT),
	.TsaidaDHT(TsaidaDHT),
	.Tterminou(Tterminou),
	.ch1(ch1),
	.ch2(ch2),
	.ch3(ch3),
	.clk(clk),
	.colum(colum),
	.debug(debug),
	.debugData(debugData),
	.estadoAtual(estadoAtual),
	.linhas(linhas),
	.pino_inout(pino_inout),
	.rx(rx),
	.teste(teste),
	.teste1(teste1),
	.tx(tx)
);
initial 
begin 
#10000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	#10000;
end 

// rx
initial
begin
	rx = 1'b1;
	rx = #1600000 1'b0;
	rx = #180000 1'b1;
	rx = #20000 1'b0;
	rx = #20000 1'b1;
	rx = #40000 1'b0;
	rx = #120000 1'b1;
end 

// pino_inout
initial
begin
	treg_pino_inout = 1'bZ;
end 
// TsaidaDHT[ 39 ]
initial
begin
	TsaidaDHT[39] = 1'b0;
end 
// TsaidaDHT[ 38 ]
initial
begin
	TsaidaDHT[38] = 1'b0;
end 
// TsaidaDHT[ 37 ]
initial
begin
	TsaidaDHT[37] = 1'b1;
end 
// TsaidaDHT[ 36 ]
initial
begin
	TsaidaDHT[36] = 1'b1;
end 
// TsaidaDHT[ 35 ]
initial
begin
	TsaidaDHT[35] = 1'b0;
end 
// TsaidaDHT[ 34 ]
initial
begin
	TsaidaDHT[34] = 1'b0;
end 
// TsaidaDHT[ 33 ]
initial
begin
	TsaidaDHT[33] = 1'b1;
end 
// TsaidaDHT[ 32 ]
initial
begin
	TsaidaDHT[32] = 1'b0;
end 
// TsaidaDHT[ 31 ]
initial
begin
	TsaidaDHT[31] = 1'b0;
end 
// TsaidaDHT[ 30 ]
initial
begin
	TsaidaDHT[30] = 1'b0;
end 
// TsaidaDHT[ 29 ]
initial
begin
	TsaidaDHT[29] = 1'b0;
end 
// TsaidaDHT[ 28 ]
initial
begin
	TsaidaDHT[28] = 1'b0;
end 
// TsaidaDHT[ 27 ]
initial
begin
	TsaidaDHT[27] = 1'b0;
end 
// TsaidaDHT[ 26 ]
initial
begin
	TsaidaDHT[26] = 1'b0;
end 
// TsaidaDHT[ 25 ]
initial
begin
	TsaidaDHT[25] = 1'b0;
end 
// TsaidaDHT[ 24 ]
initial
begin
	TsaidaDHT[24] = 1'b0;
end 
// TsaidaDHT[ 23 ]
initial
begin
	TsaidaDHT[23] = 1'b0;
end 
// TsaidaDHT[ 22 ]
initial
begin
	TsaidaDHT[22] = 1'b0;
end 
// TsaidaDHT[ 21 ]
initial
begin
	TsaidaDHT[21] = 1'b0;
end 
// TsaidaDHT[ 20 ]
initial
begin
	TsaidaDHT[20] = 1'b1;
end 
// TsaidaDHT[ 19 ]
initial
begin
	TsaidaDHT[19] = 1'b0;
end 
// TsaidaDHT[ 18 ]
initial
begin
	TsaidaDHT[18] = 1'b1;
end 
// TsaidaDHT[ 17 ]
initial
begin
	TsaidaDHT[17] = 1'b0;
end 
// TsaidaDHT[ 16 ]
initial
begin
	TsaidaDHT[16] = 1'b0;
end 
// TsaidaDHT[ 15 ]
initial
begin
	TsaidaDHT[15] = 1'b0;
end 
// TsaidaDHT[ 14 ]
initial
begin
	TsaidaDHT[14] = 1'b0;
end 
// TsaidaDHT[ 13 ]
initial
begin
	TsaidaDHT[13] = 1'b0;
end 
// TsaidaDHT[ 12 ]
initial
begin
	TsaidaDHT[12] = 1'b0;
end 
// TsaidaDHT[ 11 ]
initial
begin
	TsaidaDHT[11] = 1'b0;
end 
// TsaidaDHT[ 10 ]
initial
begin
	TsaidaDHT[10] = 1'b0;
end 
// TsaidaDHT[ 9 ]
initial
begin
	TsaidaDHT[9] = 1'b0;
end 
// TsaidaDHT[ 8 ]
initial
begin
	TsaidaDHT[8] = 1'b0;
end 
// TsaidaDHT[ 7 ]
initial
begin
	TsaidaDHT[7] = 1'b0;
end 
// TsaidaDHT[ 6 ]
initial
begin
	TsaidaDHT[6] = 1'b0;
end 
// TsaidaDHT[ 5 ]
initial
begin
	TsaidaDHT[5] = 1'b0;
end 
// TsaidaDHT[ 4 ]
initial
begin
	TsaidaDHT[4] = 1'b0;
end 
// TsaidaDHT[ 3 ]
initial
begin
	TsaidaDHT[3] = 1'b0;
end 
// TsaidaDHT[ 2 ]
initial
begin
	TsaidaDHT[2] = 1'b0;
end 
// TsaidaDHT[ 1 ]
initial
begin
	TsaidaDHT[1] = 1'b0;
end 
// TsaidaDHT[ 0 ]
initial
begin
	TsaidaDHT[0] = 1'b0;
end 

// Tterminou
initial
begin
	Tterminou = 1'b0;
	Tterminou = #2000000 1'b1;
	Tterminou = #40000 1'b0;
	Tterminou = #1160000 1'b1;
	Tterminou = #40000 1'b0;
	Tterminou = #1880000 1'b1;
	Tterminou = #40000 1'b0;
	Tterminou = #2240000 1'b1;
	Tterminou = #40000 1'b0;
end 

// ch1
initial
begin
	ch1 = 1'b0;
end 

// ch2
initial
begin
	ch2 = 1'b0;
end 

// ch3
initial
begin
	ch3 = 1'b0;
end 

// TerroDHT
initial
begin
	TerroDHT = 1'b0;
end 

// TdhtTrabalhando
initial
begin
	TdhtTrabalhando = 1'b0;
end 
endmodule

